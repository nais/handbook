{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"A handbook of sorts","text":"<p>Here we will cover the parts \"unique\" to us and therefore weren't covered during onboarding</p> <p> </p> <p>Nais is a complex animal - and if you are new to the team there will be quite a few things that are all but obvious and apparent.</p> <p>Factoids about the team are posted on Slack. Take a minute to present your facts, and find out about your colleagues.</p> <p>The technical documentation is comprehensive but hardly describes how we function as a team. This handbook is an attempt at bringing some of the silent knowledge to an audible frequency, and at the very least guide you through the bare essentials. To get you started we recommend that you familiarize yourself with our manifest. The guiding principles that define the how, the what, and the why we do the things that we do. </p> <p>So now that have you have memorized the manifest and documentation we can get into it all.</p>"},{"location":"administrative/fixtures/","title":"Fixtures","text":"<p>The NAIS team might look disorganised to a newcomer and in a certain sense of the word this holds true. However there are a few fixtures in place to ensure a certain degree of synchronisation, consensus and progression.</p>"},{"location":"administrative/fixtures/#froom","title":"Froom","text":"<p>Thanks to COVID19 we have become \"remote first only\". And in case you are wondering; The froom is our zoom based digital workspace. Froom is a portmanteau of Frode and Zoom. Frode is a popular guy, so his personal Zoom space was where we all gravitated.</p> <p>We all hang out in the lobby and join breakout rooms for more in-depth exploration of topics that may not be of general interest. Anyone is welcome anywhere but \"good manners\" apply. Make your presence known when joining and if you sense that you will be interupting trains of thought or coding flow, come back later or use Slack instead. The froom url is posted in the topic here. </p> <p>All meeting fixtures are held in The froom as well as ad-hoc and sceduled meetings with third parties.</p> <p>Any and all meetings that are deemed unnecessary due to priority or lack of substance are swiftly cancelled and we all go back to [insert task].</p>"},{"location":"administrative/fixtures/#weekly","title":"Weekly","text":"<p>The NAIS weekly takes place Monday at high noon.</p>"},{"location":"administrative/slack/","title":"Slack","text":""},{"location":"administrative/slack/#we-do-not-want-to-leave-anyone-out-but-invites-and-inclusion-can-sometimes-fall-between-the-cracks","title":"We do not want to leave anyone out but invites and inclusion can sometimes fall between the cracks.","text":"<p>Here is a list of Slack channels you might want to join (or in some cases should be in). If you haven't been invited to a private channel listed here let your sponsor know.  </p>"},{"location":"administrative/slack/#private-channels","title":"Private Channels","text":"<p><code>#nais-internal</code> <code>#nais-tech</code></p>"},{"location":"administrative/slack/#public-channels","title":"Public Channels","text":"<p><code>#nais</code></p> <p><code>#naisdevice</code></p> <p><code>#nais-announcements</code></p>"},{"location":"social/the-great-outdoors/","title":"The Great Outdoors","text":""},{"location":"social/the-great-outdoors/#all-work-and-no-play-makes-nais-a-dull-platform","title":"\"All work and no play makes NAIS a dull platform\"","text":""},{"location":"social/the-great-outdoors/#native-naisians","title":"Native NAISians","text":""},{"location":"social/the-great-outdoors/#the-nais-pole","title":"The NAIS Pole","text":""},{"location":"technical/observability/","title":"Observability Stack","text":"<p>This document describes the technical observability stack for nais-system Features.</p>"},{"location":"technical/observability/#overview","title":"Overview","text":"<p>The observability stack in nais consists of the following components:</p> <ul> <li>Alertmanager</li> <li>Grafana</li> <li>Grafana Agent</li> <li>Logging Operator</li> <li>Loki</li> <li>OpenTelemery Operator</li> <li>OpenTelemetry Collector</li> <li>Prometheus Operator</li> <li>Prometheus</li> <li>Tempo</li> </ul>"},{"location":"technical/observability/#opentelemetry-collector","title":"OpenTelemetry Collector","text":"<p>The OpenTelemetry Collector is a vendor-agnostic, open-source telemetry collector that can be used to collect, process, and export telemetry data. It is a powerful tool that can be used to collect logs, metrics, and traces from a variety of sources and export them to a variety of destinations.</p> <p>OpenTelemetry Collector implements the OpenTelemetry protocol (OTLP) which is a standard for transmitting telemetry data.</p> Full otlpTraces only <pre><code>graph LR\n  Feature[Feature]\n  OtelCollector[Collector]\n  Loki\n  Prometheus\n  Tempo\n\n  Feature -- otlp --&gt; OtelCollector\n\n  OtelCollector -- traces --&gt; Tempo\n  OtelCollector -- logs --&gt; Loki\n  OtelCollector -- metrics --&gt; Prometheus\n\n  Tempo -- query --&gt; Grafana\n  Loki -- query --&gt; Grafana\n  Prometheus -- query --&gt; Grafana</code></pre> <pre><code>graph LR\n  Feature[Feature]\n  OtelCollector[Collector]\n  LoggingOperator\n  Loki\n  Prometheus\n  Tempo\n\n  Feature -- traces --&gt; OtelCollector\n  Feature -- stdout/stderr --&gt; LoggingOperator\n  LoggingOperator -- forward --&gt; Loki\n  Feature -- scrape --&gt; Prometheus\n  OtelCollector -- traces --&gt; Tempo\n\n  Tempo -- query --&gt; Grafana\n  Loki -- query --&gt; Grafana\n  Prometheus -- query --&gt; Grafana</code></pre>"},{"location":"technical/observability/#endpoints","title":"Endpoints","text":"<p>The OpenTelemetry Collector exposes the following endpoints:</p> Endpoint Description <code>http://opentelemetry-management-collector:4317</code> Internal endpoint for features in nais-system namespace. <code>https://collector-internet.&lt;tenant&gt;.cloud.nais.io</code> Internet exposed endpoint for things running outside of nais. <p>Fasit features can use environment values in <code>Feature.yaml</code> to get the correct OpenTelemetry config without hardcoding the endpoint.</p> Feature.yaml <pre><code>values:\n  observability.otelp.endpoint:\n    computed:\n      template: \"{{ .Env.otel_otlp_endpoint }}\"\n  observability.otelp.protocol:\n    computed:\n      template: \"{{ .Env.otel_otlp_protocol }}\"\n  observability.otelp.insecure:\n    computed:\n      template: \"{{ .Env.otel_otlp_insecure }}\"\n</code></pre>"},{"location":"technical/observability/#tenant-clusters","title":"Tenant Clusters","text":"<p>All nais clusters have a dedicated OpenTelemetry Collector instance running in the <code>nais-system</code>. Tenant clusters forwards to management cluster using the <code>otlp-http</code> endpoint so that all telemetry data from nais-system is collected in a single place.</p> <pre><code>---\nconfig:\n    flowchart:\n        defaultRenderer: elk\n---\n%%{init: {'theme':'dark'}}%%\nflowchart\n  subgraph \"management\"[Management Cluster]\n    subgraph \"management-nais-system\"[nais-system]\n      OtelCollector[Management Collector]\n      Tempo\n      Loki\n      Prometheus\n      Feature[Feature]\n    end\n  end\n\n  subgraph \"dev\"[Tenant Dev Cluster]\n    subgraph \"dev-nais-system\"[nais-system]\n      DevFeature[Feature]\n      DevOtelC[Management Collector]\n    end\n  end\n\n  subgraph \"prod\"[Tenant Prod Cluster]\n    subgraph \"prod-nais-system\"[nais-system]\n      ProdFeature[Feature]\n      ProdOtelC[Management Collector]\n    end\n  end\n\n  Feature -- otlp-grpc --&gt; OtelCollector\n\n  DevFeature -- otlp-grpc --&gt; DevOtelC\n  ProdFeature -- otlp-grpc --&gt; ProdOtelC\n  DevOtelC -- otlp-http --&gt; OtelCollector\n  ProdOtelC -- otlp-http --&gt; OtelCollector\n\n  OtelCollector -- traces --&gt; Tempo\n  OtelCollector -- logs --&gt; Loki\n  OtelCollector -- metrics --&gt; Prometheus</code></pre>"},{"location":"technical/overview/","title":"NAIS Overview","text":"<p>This document is a high-level overview of the NAIS platform</p>"},{"location":"technical/overview/#namespaces","title":"Namespaces","text":"<p>Over the years we have a number of namespaces that we use for different purposes. The ones to know about are:</p> Name Description <code>nais-system</code> Where we deliver NAIS functionality <code>nais</code> Team namespace for NAIS. Custom functionality for NAV <code>nais-verification</code> Test applications for verifying NAIS with alerts <code>kyverno</code> Only Kyverno is allowed in here <code>cnrm-system</code> Where Cloud Native Resource Manager runs. Managed by Google"},{"location":"technical/overview/#tenants","title":"Tenants","text":""},{"location":"technical/overview/#clusters","title":"Clusters","text":""},{"location":"technical/overview/#management","title":"Management","text":""},{"location":"technical/production-ready/","title":"What is production ready?","text":"<p>This is the NAIS team's attempt to define what production ready means to us. Production implies quality and durability. Running a system means serving requests, and requests are ultimately serving users. We care about our users, thus we must care about our systems.</p> <p>At NAIS, we strive to:</p> <ul> <li>provide fully self serviced products with minimal downtime,</li> <li>be confident that code changes will not break existing functionality,</li> <li>respond quickly when systems fail,</li> <li>spend minimal time fixing errors,</li> <li>and most importantly: spend as much time possible implementing useful services for our users. (you!)</li> </ul> <p>We believe that if our systems conform to the principles in this document, we have a greater chance of achieving these goals.</p>"},{"location":"technical/production-ready/#12-factor-app","title":"12 factor app","text":"<p>Write your application according to the principles of 12 factor apps.</p> <p>Twelve factor apps:</p> <ul> <li>have declarative system requirements,</li> <li>are suitable for deployment in Docker containers,</li> <li>do not have differences between development and production, and</li> <li>can scale up without significant changes to tooling, architecture, or development practices.</li> </ul>"},{"location":"technical/production-ready/#observability","title":"Observability","text":"<p>Expose a Prometheus metric endpoint to allow scraping of key application metrics.</p>"},{"location":"technical/production-ready/#measuring-success","title":"Measuring success","text":"<p>Figure out service level indicators (SLI) and service level objectives (SLO).</p> <p>Service level indicators are quantifying metrics such as error rate, request latency, availability, and system throughput.</p> <p>Service level objectives are targets values for your metrics. You might say that you want an uptime of 99.9%. How do you define uptime? Is it a sufficiently low error rate? Is it being able to serve requests within a reasonable amount of time?</p> <p>Implement SLIs in the application code. Create views in a Grafana dashboard to check up on SLOs.</p> <p>Recommended read: Service Level Objectives in the Google Site Reliability Engineering handbook.</p>"},{"location":"technical/production-ready/#alerts","title":"Alerts","text":"<p>Alerts should be tied to SLOs. Consider if alerting is at all needed. An alert should only fire if human intervention is required. Too many alerts going off will result in alarm fatigue.</p>"},{"location":"technical/production-ready/#relevant-logs","title":"Relevant logs","text":"<p>Ensure traceability of errors by logging sufficient amount of debug information. Do not include sensitive data in logs. Sensitive data include credentials and personally identifyable information.</p>"},{"location":"technical/production-ready/#tests","title":"Tests","text":"<p>Ensure sufficient test coverage so that the next developer is not afraid of breaking things when updating your code.</p>"},{"location":"technical/production-ready/#documentation","title":"Documentation","text":"<ul> <li>Development/building</li> <li>End-user documentation</li> <li>Sysadmin/maintenance</li> <li>Document code where it is complex, hard to read, or otherwise obscure</li> </ul>"},{"location":"technical/production-ready/#continuous-integration","title":"Continuous Integration","text":"<p>Ensure that changes to the codebase are built automatically, and pushed to development and production environments. No manual steps other than <code>git push</code> should be neccessary.</p>"},{"location":"technical/production-ready/#publish-and-announce","title":"Publish and announce","text":"<p>Your system is not in production until it has users. Make sure all potential end users are aware of your system and can use it. Using a system means making requests and having access to support and documentation.</p>"},{"location":"technical/production-ready/#decrease-bus-factor","title":"Decrease bus factor","text":"<p>Ensure that at least two people on your team have sufficient knowledge to debug and work on the system, to avoid bus factor.</p>"},{"location":"technical/production-ready/#data-protection-impact-assessment","title":"Data Protection Impact Assessment","text":"<p>Perform, if applicable, a Data Protection Impact Assessment (or in Norwegian, personvernskonsekvensvurdering (PVK)).</p>"},{"location":"technical/production-ready/#security-audit","title":"Security Audit","text":"<p>Perform a security audit (ROS) before releasing to production.</p>"},{"location":"technical/publications-media/","title":"Publications &amp; Media","text":""},{"location":"technical/publications-media/#seasoned-adventurers-giving-back","title":"Seasoned adventurers - giving back","text":"<p>Our work is in large part driven by and on open source solutions and thanks to the sharing of others we enjoy a faster pace and more robust infrastructure than one might otherwise expect. With that in mind, we do try to contribute with content that describe topics and experiences that have been or are of significance. Being a public service we also try to share through talks, conferences and interactions with other government bodies and the developer community in general. Here is a collection of the past &amp; present.</p>"},{"location":"technical/publications-media/#write-ups","title":"Write ups","text":"<p>NAIS blog</p>"},{"location":"technical/publications-media/#presentations","title":"Presentations","text":"<ul> <li> <p>Using Kubernetes to Change Legacy Systems and Processes in the Public Sector </p> </li> <li> <p>Experiences From Running Istio in a K8s Production Environment </p> </li> <li> <p>NAIS applikasjonsplattform</p> </li> <li> <p>Continious Monitoring</p> </li> <li> <p>Hva kjennetegner en moderne applikasjonsplattform?</p> </li> </ul>"},{"location":"technical/upgrading-kafka/","title":"Procedure to follow when upgrading Kafka","text":"<p>Kafka is an important service in NAV, and problems that affect Kafka affects many teams. For that reason we have decided to describe the procedure for upgrading Kafka in detail, to have a playlist to refer to.</p> <p>The upgrade should be properly announced in #nais-announcements, with a copy to relevant channels, either by link or by copied text. For NAV, #kafka is a relevant channel. For any other tenants that use Kafka, the tenant will typically have one support channel which should get a copy of the announcement.</p>"},{"location":"technical/upgrading-kafka/#1-upgrade-in-dev-nais-dev-first","title":"1. Upgrade in dev-nais-dev first","text":"<p>The dev-nais-dev tenant is our testing tenant, and allows testing platform changes without affecting developer teams. By upgrading in dev-nais-dev first, we can check that kafka-canary continues to work, and optionally run additional tests to verify that everything works.</p> <p>It is considered enough to check that the kafka-canary continues to work and handles the upgrade process without major issues.</p> <p>Once everything is confirmed to work in dev-nais-dev, rolling out to other tenants/clusters can be planned.</p> <p>Upgrading is done by changing <code>kafka_version</code> in the <code>naas.tf</code> file for dev-nais tenant, dev environment.</p>"},{"location":"technical/upgrading-kafka/#2-upgrade-development-environments","title":"2. Upgrade development environments","text":"<p>Currently, NAV is the only tenant that uses Kafka, but we have two projects that fall in this category:</p> <ul> <li>nav-dev</li> <li>nav-integration-test</li> </ul> <p>The upgrade should be announced clearly, with a request for teams to check their applications during the upgrade and after.</p> <p>After the upgrade, teams will have 1 week to report any issues to the nais-team, who can decide if the upgrade in production should be held back or go ahead.</p>"},{"location":"technical/upgrading-kafka/#3-upgrade-production-environments","title":"3. Upgrade production environments","text":"<p>There are two projects:</p> <ul> <li>nav-prod</li> <li>nav-infrastructure</li> </ul> <p>When announcing the upgrade, request that teams that haven't checked their dev environment do so now, and allow for a few hours before starting the upgrade. Make sure to dedicate time to watch the upgrade progress, and follow up on any reports of problems.</p> <p>Make sure to inform the users when the upgrade has completed.</p>"},{"location":"technical/write-the-doc/","title":"Authoring the NAIS docs","text":"<p>When writing the documentation we serve at doc.nais.io / <code>doc.&lt;tenant&gt;.cloud.nais.io</code>, we want to make sure that the content we provide helps our users to understand and use the platform we're making.</p> <p>Some key points to keep in mind when writing the docs are:</p> <ul> <li>Following the diataxis theory</li> <li>Less is more: Keep it short and to the point. This makes it easier to sustain high quality over time.</li> <li>We are writing docs for the users of our platform. No one else. We should be empathetic to their needs and understanding of the platform, and be mindful of adding details that are not relevant in the current documentation context</li> <li>Consistency in style and tone</li> <li>NAIS Quality</li> </ul>"},{"location":"technical/write-the-doc/#diataxis-httpsdiataxisfr","title":"Diataxis (https://diataxis.fr/)","text":"<p>Di\u00e1taxis identifies four distinct needs, and four corresponding forms of documentation - tutorials, how-to guides, technical reference and explanation. It places them in a systematic relationship, and proposes that documentation should itself be organised around the structures of those needs.</p> <p>To create contents you must determine what you are setting out to do. Are you writing a Tutorial, a How-to guide, a Reference or is it a comprehensive Explanantion of a concept.</p>"},{"location":"technical/write-the-doc/#tutorial","title":"Tutorial","text":"<p>A tutorial is an experience that takes place under the guidance of a tutor. A tutorial is always learning-oriented.</p>"},{"location":"technical/write-the-doc/#how-to","title":"How-to","text":"<p>How-to guides are directions that guide the reader through a problem or towards a result. How-to guides are goal-oriented.</p>"},{"location":"technical/write-the-doc/#reference","title":"Reference","text":"<p>Reference guides are technical descriptions of the machinery and how to operate it. Reference material is information-oriented.</p>"},{"location":"technical/write-the-doc/#explanation","title":"Explanation","text":"<p>Explanation is a discusive treatment of a subject, that permits reflection. Explanation is understanding-oriented.</p>"},{"location":"technical/write-the-doc/#conventions","title":"Conventions","text":""},{"location":"technical/write-the-doc/#documentation-structure","title":"Documentation structure","text":"<p>The file tree represents the structure of the navigation menu. The H1 (#) will be the title of the page and the title in the navigation menu</p> <p>To override the placement in the navigation menu, we use the Awesome Pages plugin for MkDocs.</p>"},{"location":"technical/write-the-doc/#placeholder-variables","title":"Placeholder variables","text":"<p>Where the reader is expected to change the content, we use placeholder variables. These variables are written in uppercase, with words separated by hyphens, surrounded by &lt;&gt;. For example: <code>&lt;MY-APP&gt;</code>.</p>"},{"location":"technical/write-the-doc/#tenant-variables","title":"Tenant variables","text":"<p>We template the tenant name in the documentation using <code>&lt;&lt;tenant()&gt;&gt;</code> When the documentation is built, this will be replaced with the relevant tenant name.</p> <p>For even more convenience, we have a <code>&lt;&lt;tenant_url(\"service\")&gt;&gt;</code> function that will replace the <code>service</code> with the relevant URL for the service and create a full tenant URL to the service. An optional second parameter can be used to specify the path to the service eg. <code>&lt;&lt;tenant_url(\"grafana\", \"explore\")&gt;&gt;</code></p>"},{"location":"technical/write-the-doc/#code-blocks","title":"Code blocks","text":"<p>We want to use expanded notes with the filename in the title and the code block inside the note. Preferably with syntax highlighting where applicable. This will give the reader a copy button with the relevant code and the filename will be visible in the navigation menu.</p> <pre><code>???+ note \".nais/app.yaml\"\n\n    ```yaml hl_lines=\"6-8 11\"\n    apiVersion: nais.io/v1alpha1\n    kind: Application\n    ...\n    ```\n</code></pre>"},{"location":"technical/write-the-doc/#alternate-paths","title":"Alternate paths","text":"<p>When the user is given a choice, we want to show both paths in the documentation. For example programming language, OS or different methods</p> <pre><code>  === \"Linux\"\n    linux specific stuff\n  === \"macOS\"\n    macOS specific stuff\n</code></pre>"},{"location":"technical/write-the-doc/#links","title":"Links","text":"<p>With the new structure links play a big part in the documentation. We want to make sure that the links are consistent and easy to understand. We use the following structure for links:</p> Type of Link Icon Link Explanation <code>[:bulb: Learn more about ...](../)</code> How-to guide <code>[:dart: Learn how to ...](../)</code> Reference <code>[:computer: Reference for ](../)</code> Tutorial <code>[:rocket: Tutorial for ...](../)</code> Prometheus <code>[:simple-prometheus: Open Prometheus](../)</code> Grafana <code>[:simple-grafana: Open Grafana](../)</code> External link <code>[:octicons-link-external-24: External link](https://...)</code>"},{"location":"technical/write-the-doc/#tags","title":"Tags","text":"<p>We use tags to categorize and group the content. This allows for finding related pages by tag. Tags are written in the front matter of the markdown file:</p> <pre><code>---\ntags: [tag1, tag2]\n---\n\n# Title\n\n...\n</code></pre> <p>Tags should be in lowercase.</p> <p>Tag the form of the page. The following tags are used:</p> Form Tag Explanation <code>explanation</code> How-to guide <code>guide</code> Reference <code>reference</code> Tutorial <code>tutorial</code>"},{"location":"technical/tenant-setup/","title":"Setting up a tenant organization","text":"<p>This guide is used when setting up a new tenant. This is typically done by the NAIS team, together with the tenants administrators.</p> <pre><code>graph TD\nA[Google Tenant] --&gt; B[NAIS Folder]\nB --&gt; C[management]\nB --&gt; D[dev]\nB --&gt; E[prod]</code></pre>"},{"location":"technical/tenant-setup/#prereq","title":"Prereq","text":"<ul> <li>Google Cloud Tenant admin</li> <li>GitHub Organization</li> </ul>"},{"location":"technical/tenant-setup/#required-settings","title":"Required settings","text":""},{"location":"technical/tenant-setup/#required-permissions","title":"Required permissions","text":"<p>On the user that will run the following commands, the following IAM roles are required on an organization level.</p> <ul> <li><code>Owner</code></li> <li><code>Organization Administrator</code></li> <li><code>Folder Creator</code></li> <li><code>Organization Policy Administrator</code></li> </ul>"},{"location":"technical/tenant-setup/#create-the-nais-folder","title":"Create the NAIS folder","text":"<p>Everything related to NAIS is contained within this folder.</p> <pre><code>export NAAS_ORG_NAME=my-org # (1)\nexport NAAS_ORG_ID=$(gcloud organizations list --filter $NAAS_ORG_NAME | tail -n1 | awk '{print $2}')\n\ngcloud resource-manager folders create --display-name=nais --organization=$NAAS_ORG_ID\nexport NAAS_GOOGLE_FOLDERID=$(gcloud resource-manager folders list --organization=$NAAS_ORG_ID | grep nais | awk '{print $3}')\n</code></pre> <ol> <li> Change this to the name of your Google Organization</li> </ol>"},{"location":"technical/tenant-setup/#grant-access-to-the-nais-team-and-the-terraform-user","title":"Grant access to the NAIS team and the terraform user","text":"<p>To allow the NAIS team the required permissions to operate nais, IAM policies must be added to the NAIS folder.</p> <p>Bug</p> <p>Find correct roles for the following users:</p> <ul> <li>nais-viewers</li> <li>nais-admins</li> </ul> Copy and run this command <pre><code>cat &lt;&lt;EOF &gt; naas-google-org-policy.json\n{\n  \"bindings\": [\n    {\n      \"members\": [\n        \"serviceAccount:nais-tf-__TENANTNAME__@nais-io.iam.gserviceaccount.com\"\n      ],\n      \"role\": \"roles/artifactregistry.admin\"\n    },\n    {\n      \"members\": [\n        \"serviceAccount:nais-tf-__TENANTNAME__@nais-io.iam.gserviceaccount.com\"\n      ],\n      \"role\": \"roles/compute.admin\"\n    },\n    {\n      \"members\": [\n        \"serviceAccount:nais-tf-__TENANTNAME__@nais-io.iam.gserviceaccount.com\"\n      ],\n      \"role\": \"roles/container.admin\"\n    },\n    {\n      \"members\": [\n        \"serviceAccount:nais-tf-__TENANTNAME__@nais-io.iam.gserviceaccount.com\"\n      ],\n      \"role\": \"roles/dns.admin\"\n    },\n    {\n      \"members\": [\n        \"serviceAccount:nais-tf-__TENANTNAME__@nais-io.iam.gserviceaccount.com\"\n      ],\n      \"role\": \"roles/logging.admin\"\n    },\n    {\n      \"members\": [\n        \"serviceAccount:nais-tf-__TENANTNAME__@nais-io.iam.gserviceaccount.com\"\n      ],\n      \"role\": \"roles/resourcemanager.folderCreator\"\n    },\n    {\n      \"members\": [\n        \"serviceAccount:nais-tf-__TENANTNAME__@nais-io.iam.gserviceaccount.com\"\n      ],\n      \"role\": \"roles/resourcemanager.folderIamAdmin\"\n    },\n    {\n      \"members\": [\n        \"serviceAccount:nais-tf-__TENANTNAME__@nais-io.iam.gserviceaccount.com\"\n      ],\n      \"role\": \"roles/resourcemanager.projectCreator\"\n    },\n    {\n      \"members\": [\n        \"serviceAccount:nais-tf-__TENANTNAME__@nais-io.iam.gserviceaccount.com\"\n      ],\n      \"role\": \"roles/serviceusage.serviceUsageAdmin\"\n    }\n  ]\n}\nEOF\nread -p \"Enter NaaS Tenant Name [$NAAS_TENANTNAME]: \" TENANTNAME &amp;&amp; \\\nexport NAAS_TENANTNAME=\"${TENANTNAME:-$NAAS_TENANTNAME}\" &amp;&amp; \\\nsed -ie \"s/__TENANTNAME__/$NAAS_TENANTNAME/g\" naas-google-org-policy.json &amp;&amp; \\\necho \"gcloud resource-manager folders set-iam-policy $NAAS_GOOGLE_FOLDERID naas-google-org-policy.json\"\n</code></pre>"},{"location":"technical/tenant-setup/#teams-part-1","title":"Teams (part 1)","text":"<p> nais/teams-backend manages teams and configures groups and access in other systems.</p> <p>teams needs a dedicated user account in the Google directory. This user must be manually created in the Google Admin console. The user must be granted the <code>Groups Admin</code> role to be able to create and maintain groups for the teams:</p> <ol> <li>Go to https://admin.google.com/ac/users</li> <li>Click on <code>Add new user</code></li> <li>Enter <code>nais-teams</code> as first name, and <code>user</code> as last name</li> <li>Enter <code>nais-teams</code> as the primary email</li> <li>Click <code>Add new user</code> to add the user account</li> <li>Click on the created user and then on <code>Assign roles</code> under the <code>Admin roles and privileges</code> section</li> <li>Assign the <code>Groups Admin</code> role and click <code>Save</code></li> </ol>"},{"location":"technical/tenant-setup/#teams-admins","title":"Teams admins","text":"<p>teams automatically syncs users from the Google Workspace to its own database. Tenants can control which users that should be assigned the admin role in teams by creating a group called <code>teams-admins@&lt;tenant-domain&gt;</code>, and then add the necessary users to this group. When teams runs the user sync it will look for this group, and make sure that the users in the group are granted the admin role. Whenever a user is removed from the group, teams will revoke the admin role from the user on the next sync.</p> <p>Users with the admin role in teams have access to some parts of teams that regular users does not. Some of these features are:</p> <ul> <li>Configure / enable / disable reconcilers</li> <li>Grant / revoke roles</li> <li>Manipulate reconciler states for teams</li> </ul>"},{"location":"technical/tenant-setup/#kubernetes-group","title":"Kubernetes group","text":"<p>In Google Admin create a group named <code>gke-security-groups</code>. This group is used to manage access to the kubernetes clusters, and will be managed by teams. Make sure the group has the View Members permission selected for Group Members.</p>"},{"location":"technical/tenant-setup/#highly-recommended-settings","title":"Highly recommended settings","text":""},{"location":"technical/tenant-setup/#log-location","title":"Log location","text":"<p>Every project created in GCP will have a default log location for all logs. The default is Global. In order to keep your logs in europe, we strongly recommend setting the default log location to europe using the following command</p> <pre><code>gcloud alpha logging settings update --organization=&lt;your org ID&gt; --storage-location=europe-north1\n</code></pre>"},{"location":"technical/tenant-setup/#organization-policy-for-location","title":"Organization policy for location","text":"<p>Although all resources created by NAIS is located within the EU, teams are still able to create resources anywhere unless an organizational constraint is in place.</p> Click to see file content <pre><code>constraint: constraints/gcp.resourceLocations\netag: BwVUSr8Q7Ng=\nlistPolicy:\n  allowedValues:\n  - in:eu-locations\n</code></pre> <pre><code>gcloud beta resource-manager org-policies set-policy --organization=&lt;your org ID&gt; &lt;file name&gt;.yaml\n</code></pre>"},{"location":"technical/tenant-setup/#run-nais-terraform-modules","title":"Run nais-terraform-modules","text":"<p>Before doing the following step, run the terraform setup.</p>"},{"location":"technical/tenant-setup/#teams-part-2","title":"Teams (part 2)","text":""},{"location":"technical/tenant-setup/#configure-oauth-login-for-web-frontend","title":"Configure OAuth login for web frontend","text":"<p>Set up an OAuth client for teams.</p> <ol> <li>Go to https://console.cloud.google.com</li> <li>Choose project  -&gt; nais-management -&gt; nais-management <li>Go to APIs ans Service -&gt; OAuth consent screen</li> <li>Internal -&gt; create<ol> <li>App name: <code>nais management</code></li> <li>User support email: <code>admin@&lt;tenant-domain&gt;</code></li> <li>Developer Contact email: <code>admin@&lt;tenant-domain&gt;</code></li> </ol> </li> <li>Save and continue (x2)</li> <li>Go to APIs ans Service -&gt; Credentials</li> <li>Click Create Credentials -&gt; OAuth client ID</li> <li>Select type Web Application<ol> <li>Name: <code>teams</code></li> <li>Authorized redirect URI: <code>http://teams.&lt;tenant-name&gt;.cloud.nais.io/oauth2/callback</code></li> </ol> </li> <li>Set Name and Authorized redirect URIs</li> <li>Create</li> <li>Copy client id and secret and give to NAIS-team</li>"},{"location":"technical/tenant-setup/#domain-wide-delegation","title":"Domain-wide Delegation","text":"<p>teams performs some operations on behalf of the teams user mentioned above. For this to work the teams service account needs domain-wide delegation with some scopes. This must be manually set up in the Google Admin console:</p> <ol> <li>Go to https://admin.google.com/ac/owl/domainwidedelegation</li> <li>Click on <code>Add new</code> to add a new Client ID</li> <li>Enter the ID of the teams service account (provided by the NAIS team)</li> <li>Add the following scopes:</li> <li><code>https://www.googleapis.com/auth/admin.directory.group</code></li> <li><code>https://www.googleapis.com/auth/admin.directory.user.readonly</code></li> <li>Click on <code>Authorize</code></li> </ol> <p>After this is done you should see something like the following:</p> <p></p>"},{"location":"technical/tenant-setup/#github-actions-secrets","title":"Github Actions secrets","text":"<p>If you are using Github Actions to deploy your applications, you may want to add the following variable and secret to your organization's Github Actions secrets:</p> <p>Open <code>https://github.com/organizations/[ORG_NAME]/settings/secrets/actions</code></p> Name Type <code>NAIS_MANAGEMENT_PROJECT_ID</code> <code>Variable</code> <code>NAIS_WORKLOAD_IDENTITY_PROVIDER</code> <code>Secret</code> <p>These may also be set in the repository's secrets, but it is recommended to set them in the organization's secrets as they are shared between all teams.</p> <p>The NAIS team will provide the values.</p>"},{"location":"technical/tenant-setup/addons/azure-ad/","title":"Azure AD","text":"<p> nais/azurerator creates and manages Azure AD applications via Kubernetes Custom Resources for use in various authentication scenarios.</p> <p>This is an optional addon in NaaS. It is not enabled by default.</p>"},{"location":"technical/tenant-setup/addons/azure-ad/#for-tenant","title":"For Tenant","text":""},{"location":"technical/tenant-setup/addons/azure-ad/#requirements","title":"Requirements","text":"<p>To be able to use this addon, you will need to bring your own Azure AD tenant.</p> <p>Unfortunately, we do not offer provisioning nor management of Azure AD itself as a service. The Azure AD tenant must be wholly owned and operated by your organization.</p> <p>You will also need to set up a couple of things within said tenant. We'll guide you through the steps.</p>"},{"location":"technical/tenant-setup/addons/azure-ad/#google-service-accounts","title":"Google Service Accounts","text":"<p>Azurerator uses federated credentials in order to authenticate itself to your Azure AD tenant, by using tokens issued by Google.  This removes the need to share client secrets between our organizations. The tokens are in turn only issued to Google Service Accounts that exist within the NAIS projects that we've created for your Google organization.</p> <p>To set this up, you will need to find some identifiers from within your Google organization:</p> <ol> <li>Find the NAIS Google Project IDs:<ol> <li>Use the <code>gcloud</code> CLI: <code>gcloud projects list --filter=\"nais-\"</code></li> <li>There should be one project ID for each environment; <code>nais-dev-xxxx</code> and <code>nais-prod-xxxx</code>. Note these down.</li> </ol> </li> <li>For each project ID, find the unique Service Account ID for Azurerator:<ol> <li><code>gcloud iam service-accounts describe azurerator@&lt;PROJECT_ID&gt;.iam.gserviceaccount.com</code>, where <code>PROJECT_ID</code> is the ID found in the previous step.</li> <li>Note down the <code>uniqueId</code> for the service account. This ID uniquely identifies the Google Service Account that Azurerator uses in each environment.</li> </ol> </li> </ol>"},{"location":"technical/tenant-setup/addons/azure-ad/#azure-ad-application-registration","title":"Azure AD Application Registration","text":"<p>An Azure AD application registration within the tenant mentioned above is needed for Azurerator to create and manage application registrations within Azure AD.</p> <ol> <li>Sign in to your Azure Account through the Azure portal.</li> <li>Select Azure Active Directory.</li> <li>Select App registrations.</li> <li>Select New registration.<ol> <li>Name the application, for example \"azurerator\".</li> <li>Supported account type doesn't matter, single tenant is fine. </li> <li>Leave Redirect URI empty.</li> </ol> </li> <li>Under Overview, note down the values for the following fields:<ol> <li>Application (client) ID.</li> <li>Directory (tenant) ID</li> </ol> </li> <li>Navigate to Certificates and secrets.<ol> <li>Select Federated credentials.</li> <li>Select Add credentials.</li> <li>Under Federated credential scenario, select Other issuer.</li> <li>Under Issuer, enter the value <code>https://accounts.google.com</code></li> <li>Under Subject, enter the value for <code>uniqueId</code> that you noted down from the previous section on Google Service Accounts.</li> <li>Under Name, enter the value <code>nais-&lt;environment&gt;</code>, for example <code>nais-dev</code> or <code>nais-prod</code></li> <li>Leave the Audience at the default value, i.e. <code>api://AzureADTokenExchange</code></li> <li>Repeat the steps starting from step 6 with the second <code>uniqueId</code> from the previous section on Google Service Accounts.</li> </ol> </li> <li> <p>Navigate to API permissions.</p> <ol> <li>Select Add a permission.</li> <li>Select Microsoft Graph.</li> <li>Select Application permissions.</li> <li>The application needs the following permissions:<ul> <li><code>Application.ReadWrite.All</code></li> <li><code>DelegatedPermissionGrant.ReadWrite.All</code></li> <li><code>GroupMember.Read.All</code></li> </ul> </li> <li>Add the permissions.</li> <li>Select Grant admin consent for &lt;tenant name&gt;.</li> <li>Confirm to grant the application access to the configured permissions.</li> </ol> <p>If done correctly, the list of permissions should look like this:</p> <p></p> </li> </ol>"},{"location":"technical/tenant-setup/addons/azure-ad/#microsoft-graph-object-id","title":"Microsoft Graph Object ID","text":"<p>In order for Azurerator to pre-approve delegated API permissions for the managed applications, you will need to find the Object ID for the Microsoft Graph Enterprise Application that is unique to each Azure AD tenant.</p> <ol> <li>Sign in to your Azure Account through the Azure portal.</li> <li>Select Azure Active Directory.</li> <li>Select Enterprise applications.</li> <li>Filter the list of applications:<ol> <li>Applicaton ID starts with == \"00000003-0000-0000-c000-000000000000\"</li> <li>Application type == \"Microsoft Applications\"</li> </ol> </li> <li>You should see an application named <code>GraphAggregatorService</code> or <code>Microsoft Graph</code>.</li> <li>Note down the Object ID for this application.</li> </ol>"},{"location":"technical/tenant-setup/addons/azure-ad/#application-access-groups","title":"Application Access Groups","text":"<p>Azurerator creates Azure AD application registrations that are restricted by default:</p> <ul> <li>Users are not allowed access to the application unless they are explicitly given access.</li> <li>Access is granted by group membership; groups are assigned directly to applications.</li> <li>Users must be direct members of the groups, i.e. nested groups will not work.</li> </ul> <p>You will need to define a group that contains all users in your tenant.  The definition of \"all users\" is left for you to decide. This can for example be:</p> <ul> <li>all users, including guest accounts and machine users</li> <li>all users that are not guests in your tenant</li> <li>all users that have a valid license</li> <li>all users within a certain department, and so on</li> </ul> <p>Refer to the following guides at Microsoft for details on groups:</p> <ul> <li>creating and managing groups </li> <li>dynamic group memberships</li> </ul> <p>The all users group will be assigned to any application that has enabled the <code>allowAllUsers</code> directive.  Note down the object ID for this group.</p> <p>Once you've got through all of the above, provide the NAIS team with the following information:</p> Property Description Tenant ID See Azure AD Application Registration Client ID See Azure AD Application Registration Microsoft Graph Object ID See Microsoft Graph Object ID Default All-Users Group Object ID See Application Access Groups"},{"location":"technical/tenant-setup/addons/azure-ad/#for-nais","title":"For NAIS","text":"<ol> <li>Enter the required configuration for <code>azurerator</code> in Fasit, using the information given by the tenant</li> <li>Enable the <code>azurerator</code> feature in Fasit</li> <li>Enable the <code>azurerator</code> feature within <code>naiserator</code> in Fasit</li> </ol>"},{"location":"technical/tenant-setup/addons/digdir/","title":"Digdirator","text":"<p>Digdirator enabled</p> <p>This is an optional addon in NaaS. It is not enabled by default.</p> <p>Digdirator is a feature that integrates with Digdir self-service API. Digdirator enables automated registration and lifecycle management of ID-porten and Maskinporten clients.</p> <p>Before Digdirator can use the self-service API, the tenant must receive administration clients from Digdir, one for each client type, Maskinporten and ID-porten. The Digdir self-service API is secured with oAuth2 using a <code>business certificate</code>.</p> <p>An overview of the setup is as follows:</p> <ul> <li>Clients exist in Digdir and a <code>business certificate</code> is configured</li> <li>Clients are configured with scopes required</li> <li>Add Client ID's to Secret Manager in your project</li> <li>Add <code>business certificate</code> to Google Key Management Service in your project</li> <li>Add business certificate <code>certificate-chain</code> to Secret Manager in your project</li> </ul>"},{"location":"technical/tenant-setup/addons/digdir/#for-tenant","title":"For Tenant","text":""},{"location":"technical/tenant-setup/addons/digdir/#requirements","title":"Requirements","text":""},{"location":"technical/tenant-setup/addons/digdir/#digdir-configuration","title":"Digdir configuration","text":"Recommended configuration for administration clients <p>To secure the integration with Digdir we recommend using a separate certificate for each registered client and that tenants request Digdir to lock each certificate to each client. If you already have a certificate for your clients, you can use that. As setup with these kinds of certificates is not part of this guide, we recommend that you contact Digdir for assistance.</p>"},{"location":"technical/tenant-setup/addons/digdir/#configure-administration-clients-for-id-porten-maskinporten","title":"Configure administration clients for ID-porten &amp; Maskinporten","text":"<ul> <li>ID-porten client is configured with scopes: <code>idporten:dcr.write idporten:dcr.read</code></li> <li>Maskinporten client is configured with scopes: <code>idporten:dcr.write idporten:dcr.read idporten:scopes.write</code></li> <li><code>business certificates</code> are registered in Digdir</li> </ul> <p>Tenant imports the Client ID's to Secret Manager and provide the resource names to NAIS</p> <p><code>projects/&lt;project-id&gt;/secrets/&lt;secret-id&gt;/versions/&lt;version&gt;</code></p> Digdirator use of Client ID <p>Digdirator sets the Client ID as the claim <code>iss</code> when authenticating against Digdir self-service API</p>"},{"location":"technical/tenant-setup/addons/digdir/#nais-configuration","title":"NAIS configuration","text":"<p>We really care about our compadres (tenants) and we think that a separation of concerns is a good &amp; secure way to go. It also helps us to keep the cluster secure and stable. The configuration setup for Digdirator favor security as NAIS never have direct access to your business certificate.</p> <p>When setup in Digdir is confirmed by tenant and before we can enable Digdirator, the following steps must be completed:</p>"},{"location":"technical/tenant-setup/addons/digdir/#business-certificate","title":"Business certificate","text":"Update existing certificate <p>Update of a certificate only requires the tenant to provide NAIS with the new <code>&lt;version&gt;</code></p> <p>The tenant upload their <code>business certificate</code> to Google Cloud KMS. Digdirator will never have direct access to the certificate. Once it is uploaded the business certificate can only be used for cryptographic operations. The business certificate can never be downloaded or retrieved from the KMS storage.</p> <p>An authenticated &amp; authorized Digdirator can only request the <code>Google KMS</code> to sign a payload containing an unsigned token with claims, if successful the KMS returns a signed JWT, this JWT is later used to authenticate against Digdir self-service API.</p> <p>Certificate is successfully uploaded to Google KMS, provide NAIS with the resource names</p> <p><code>projects/&lt;project-id&gt;/locations/&lt;location&gt;/keyRings/&lt;keyring&gt;/cryptoKeys/&lt;key&gt;/cryptoKeyVersions/&lt;version&gt;</code></p>"},{"location":"technical/tenant-setup/addons/digdir/#certificate-chain","title":"Certificate chain","text":"Update existing certificate chain <p>This information unlikely to change, only if a new certificate type is added to the Google KMS. Then the tenant must provide the new resource name or <code>&lt;version&gt;</code> of the certificate chain.</p> <p>Now your probably are wondering why another secret storage we already configured KMS?</p> <p>Well, when authenticating using a <code>buissness certificate</code> the oauth2.0 spec recommends the <code>certificate chain</code> to be present in the token header.</p> <p>The public <code>certificate chain</code> should be set to the <code>x5c</code> (X.509 certificate chain) header parameter, corresponding to the key used to digitally sign the JWS (JSON Web Signature).</p> <p><code>Google Cloud Key Mangement Service</code> is designed as a cryptographic system: nobody, including yourself, can get the keys out: this means they're locked inside the system, and you don't have to worry in practice about them leaking. The tradeoff is that the only thing you can do with those keys is encrypting, decrypt, and other cryptographic operations.</p> <p>But when you do have configuration info like a certificate chain or a client-id, where your software actually needs the secret, not cryptographic operations, then <code>Secret Manager</code> is designed for that use case.</p> <p>Certificate chains is successfully uploaded to <code>Secret Manager</code>, provide NAIS with the resource names</p> <p><code>projects/&lt;project-id&gt;/secrets/&lt;secret-id&gt;/versions/&lt;version&gt;</code></p>"},{"location":"technical/tenant-setup/addons/digdir/#example-format-of-a-certificate-chain","title":"Example format of a certificate chain","text":"<pre><code>-----BEGIN CERTIFICATE-----\nMIIFCDECEBC...\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIE3sKEA...\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFZTKK...\n-----END CERTIFICATE-----\n</code></pre>"},{"location":"technical/tenant-setup/addons/digdir/#for-nais","title":"For NAIS","text":"<p>When Digdirator is enabled, NAIS configures Digdirator with a service account which holds a set of roles to access Google Cloud KMS and Secret Manager in your cluster project. </p> <p>To access <code>Google KMS</code> the service account is assigned the IAM role <code>roles/cloudkms.signerVerifier</code>, which enables sign, verify, and getPublicKey operations.</p> Google Cloud KMS roles <pre><code>cloudkms.cryptoKeyVersions.useToSign\ncloudkms.cryptoKeyVersions.useToVerify\ncloudkms.cryptoKeyVersions.viewPublicKey\ncloudkms.locations.get\ncloudkms.locations.list\nresourcemanager.projects.get\n</code></pre> <p>To access <code>Secret Manager</code> the service account is assigned the IAM role <code>roles/secretmanager.secretAccessor</code> which allows Digdirator to access the payload of secrets.</p> Google Secret Manager roles <pre><code>secretmanager.secrets.get\nsecretmanager.secrets.access\nresourcemanager.projects.get\n</code></pre> <p>NAIS will configure Digdirator with the information provided, you relax your cognitive load. Configure your NAIS application with ID-porten or Maskinporten, push code -&gt; deploy. NAIS handles the rest.</p> <p>ID-porten sidecar</p> <p>If you plan to use the ID-porten sidecar, prior to usage, the feature Wonderwall must be enabled. Contact NAIS team for more information.</p>"},{"location":"technical/tenant-setup/addons/digdir/#summary-of-nais-configuration","title":"Summary of NAIS configuration","text":"<p>If we were to translate the above information required by NAIS to configure automated lifecycle of Digdir clients. Translated to yaml, it would look something like this</p> <pre><code>maskinporten:\n  kms:\n    key: \"projects/123456789/locations/europe-north1/keyRings/nais-test/cryptoKeys/maskinporten-cert-chain/cryptoKeyVersions/1\"\n  secret-manager:\n    client-id: \"projects/123456789/secrets/maskinporten-client-id/versions/1\"\n    cert-cain: \"projects/123456789/secrets/maskinporten-cert-chain/versions/1\"\nidporten:\n  kms:\n    key: \"projects/123456789/locations/europe-north1/keyRings/nais-test/cryptoKeys/idporten-cert-chain/cryptoKeyVersions/1\"\n  secret-manager:\n    client-id: \"projects/123456789/secrets/idporten-client-id/versions/1\"\n    cert-cain: \"projects/123456789/secrets/idporten-cert-chain/versions/1\"\n</code></pre>"},{"location":"technical/tenant-setup/addons/digdir/#import-certificates","title":"Import Certificates","text":""},{"location":"technical/tenant-setup/addons/digdir/#pre-requisites","title":"Pre-requisites","text":"<p>gcloud CLI is installed and configured with a user that have access to the project.</p> <p>Some configuration can be done in the Google Cloud Console, automatic wrap and import must be done with the <code>gcloud</code> CLI.</p>"},{"location":"technical/tenant-setup/addons/digdir/#google-cloud-kms","title":"Google Cloud KMS","text":"<ol> <li>Create a target key and key ring in your project</li> <li>Create a import job for the target key.</li> <li> <p>Make an import request for key</p> </li> <li> <p>Wrap and import of key can be done in automatically or manually.</p> <ul> <li>Automatically wrap and import   with <code>gcloud</code> CLI</li> <li>Manually is divided into 2 steps<ul> <li>Manually wrap using OpenSSL for Linux or macOS.</li> <li>Manually import in the   Google   Cloud Console or gcloud CLI.</li> </ul> </li> </ul> </li> </ol>"},{"location":"technical/tenant-setup/addons/digdir/#google-secret-manager","title":"Google Secret Manager","text":"<ul> <li>Create a secret in   your project</li> </ul>"},{"location":"technical/tenant-setup/addons/tokenx/","title":"TokenX","text":"<p>TokenX is the short term for the OAuth 2.0 Token Exchange flow implemented in the context of Kubernetes.</p> <p>It primarily exists of:</p> <ul> <li>an OAuth 2.0 Authorization server that provides applications with security tokens in order to securely communicate with each-other in a zero trust architecture.</li> <li>a Kubernetes operator to register OAuth 2.0 clients and associated credentials with said Authorization Server.</li> </ul> <p>The intent of the token exchange flow is to ensure that the original subject's identity and permissions are propagated through a request chain of multiple applications, while maintaining security between each application.</p> <p>This is an optional addon in NaaS. It is not enabled by default.</p>"},{"location":"technical/tenant-setup/addons/tokenx/#for-tenant","title":"For Tenant","text":"<p>Provide the NAIS team with a list of URLs pointing to metadata documents for OAuth 2.0 / OpenID Connect compliant identity providers. This is often referred to as well-known URLs, typically ending in <code>/.well-known/openid-configuration</code> or <code>/.well-known/oauth-authorization-server</code></p> <p>Otherwise, see TokenX for usage.</p>"},{"location":"technical/tenant-setup/addons/tokenx/#for-nais-operators","title":"For NAIS operators","text":"<ol> <li>Enter the tenant-provided well-known URL(s) in the Fasit configuration.<ul> <li>Enter the equivalent hosts for the outbound hosts needed for external access policies.</li> </ul> </li> <li>Generate a set of public/private keypair in JWK format, e.g. through https://mkjwk.org/.<ul> <li>Specifications:<ul> <li>Key Type: RSA</li> <li>Key Size: 2048</li> <li>Key Usage: Signature</li> <li>Algorithm: RS256</li> <li>Key ID: SHA256</li> </ul> </li> <li>The private key is used by Jwker to sign JWT assertions to authenticate itself with Tokendings.</li> <li>The public keyset (JWKS) is used by Tokendings to verify client assertions from Jwker.</li> </ul> </li> <li>Enable Jwker in Naiserator.</li> <li>Enable the TokenX feature.</li> </ol>"},{"location":"welcome/nais-manifest-eng/","title":"NAIS is a AAAA rated platform service","text":"<p>The As represent these qualities:</p> <ul> <li>Autogenous: produced independently of external influence or aid</li> <li>Advantageous: involving or creating favourable circumstances that increase the chances of success or effectiveness.</li> <li>Automatic: working by itself with little or no direct human control.</li> <li>Accountable: required or expected to justify actions or decisions.</li> </ul>"},{"location":"welcome/nais-manifest-eng/#what-is-nais-for","title":"What is NAIS for?","text":"<p>The NAIS platform is there for the development teams, and aims to offer the best conditions for developing quality welfare services for the Norwegian population. We do this by offering solid products that solve real problems at scale. The products are based on technology the nais team believes are technologically sustainable. By using the platform's products and following the platform standards, the teams can focus on solving high value challenges rather than underlying nuts and bolts. The two most important drivers for the further evolution of the platform are technological developments and the needs of the teams.</p>"},{"location":"welcome/nais-manifest-eng/#what-motivates-us","title":"What motivates us?","text":""},{"location":"welcome/nais-manifest-eng/#social-mission","title":"Social mission","text":"<p>We contribute to an important societal mission by developing and maintaining a platform that relieves developers and helps product teams succeed.</p>"},{"location":"welcome/nais-manifest-eng/#colleagues","title":"Colleagues","text":"<p>We have a good working environment with a positive energy consisting of colleagues who have the independence, passion, competence and will needed to solve our mission.</p>"},{"location":"welcome/nais-manifest-eng/#autonomy","title":"Autonomy","text":"<p>We have a great degree of freedom both as individuals and as a team. Within our assignment, we as a team choose which challenges we want to focus on and how we will solve these. As members of the team, we choose which tasks we want to participate in. This gives us a varied day to day life, and ownership of the things we work on.</p>"},{"location":"welcome/nais-manifest-eng/#technology","title":"Technology","text":"<p>At NAIS, we try to always choose the best tool for the job. We have a low threshold for experimentation, and are not afraid to ditch stuff that doesn't work. We take the advice of seasoned adventurers, but at the same time know that we can only make technology choices after building hands-on experience with the alternatives.</p>"},{"location":"welcome/nais-manifest-eng/#what-are-we-optimizing-for","title":"What are we optimizing for?","text":"<ul> <li> <p>Development speed</p> </li> <li> <p>A first class developer experience</p> </li> <li> <p>Easy to build secure applications</p> </li> <li> <p>Easy to operate applications</p> </li> <li> <p>Good ergonomics</p> </li> <li> <p>Keep pace with new technology</p> </li> </ul>"},{"location":"welcome/nais-sponsor/","title":"NAIS-Sponsor","text":""},{"location":"welcome/nais-sponsor/#it-takes-a-village-to-raise-a-nais-developer","title":"It takes a village to raise a NAIS-developer","text":"<p>For your NAIS-specific onboarding you will be guided by not only one sponsor, but you will be attached to the hip of every anchor so that you can gain insight into every as many aspects of NAIS as possible. When you have the general gist of things and feel ready you can just start picking tasks off the board(s).</p> <p>Not only the anchors are your sponsors. Every member of the team is - and you should not be apologetic or hold back in terms of reaching out to \"whomever\" because we have no higher priority than that you settle in and find joy and accomplishment with us. You can also attach yourself to anyone that you feel might shed more light on a topic you want to explore further.</p> <p>So if you find yourself wondering about something - keep this in mind: It is our duty (not to mention in our own best interest) to make sure you have the tools and understanding that you need so imagine that this Cronjob is run on the team every minute. </p>"}]}